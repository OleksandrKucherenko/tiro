/* CONNECT PLUGINS */
buildscript {
  repositories {
    jcenter()
  }
  /* PLUGINS DEPENDENCIES. */
  dependencies {
    /* WEB SERVER INTEGRATION */
    classpath 'org.akhikhl.gretty:gretty:+'
    /* DEPENDENCIES UPDATES REPORTS */
    classpath 'com.github.ben-manes:gradle-versions-plugin:+'
  }
}

apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.github.ben-manes.versions'

/* Get GIT revision unique number. */
def gitRevision() {
  return "git rev-list --count HEAD".execute().text.trim();
}

/* Get GIT Branch name. */
def gitBranch() {
  return "git rev-parse --abbrev-ref HEAD".execute().text.trim();
}

/* PUBLISH GLOBAL VARIABLES FOR ALL SUB-PROJECTS */
allprojects {
  ext {
    GIT_REVISION = "${gitRevision()}"
    GIT_BRANCH = "${gitBranch()}"

    APP_MAJOR = '1.0'
    APP_MINOR = '1'
    APP_VERSION = "$APP_MAJOR.$APP_MINOR.$GIT_REVISION"
  }

  repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
  }

  tasks.withType(JavaCompile) {
    configure(options) {
      compilerArgs << '-Xlint:all' << '-Xlint:-options'
      deprecation = true
      encoding = 'UTF-8'
    }
  }
}

/* Cleanup root project too. */
task clean(type: Delete) {
  delete rootProject.buildDir
}

/* DEFINE SERVER CONFIGURATION FILES */
gretty {
//  serverConfigFile "${rootProject.projectDir}/gradle/configuration"
}

/* CREATE A FARM FOR EXECUTING MULTIPLE WAR FILES */
farms {
  farm 'Server', {
    port = 9191
    webapp project(':war-time')
    webapp project(':war-tasks')
  }
}

/**
 * http://akhikhl.github.io/gretty-doc/Farm-tasks.html
 * Run Server on Local Machine:
 *  > ./gradlew farmRunServer
 *
 * Compile EAR (Enterprise ARchive):
 *  > ./gradlew ear
 *
 * Get EAR file content list:
 *  > zipinfo -1 ear-app/build/libs/ear-app.ear
 *  > zipinfo -1 war-tasks/build/libs/war-tasks.war
 *  > zipinfo -1 war-time/build/libs/war-time.war
 *
 * Debug Server:
 *  > ./gradlew farmRunDebugServer
 *
 * Deployment:
 *  > ./gradlew buildProduct
 *
 * */