buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

// we will use lambda
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

war {
  jar.enabled = false

  /* Remove GIT empty folder .placeholder files from final binary. */
  rootSpec.exclude('**/.placeholder')
}

dependencies {
  compile project(":lib-core")

  /* Java RX - v2.xx */
  compile 'org.glassfish.jersey.containers:jersey-container-servlet:+'

  // compile 'joda-time:joda-time:+'
  // providedCompile 'joda-time:joda-time:+'

  if (useTdd) {
    /* Unit Testing Frameworks */
    testCompile 'junit:junit:+'
    testCompile 'org.mockito:mockito-core:+'
    testCompile 'org.assertj:assertj-core:+'

    /* Reflection utilities */
    testCompile('org.reflections:reflections:+') {
      exclude group: 'com.google.code.findbugs', module: 'annotations'
    }

    /* Cucumber */
    testCompile 'info.cukes:cucumber-junit:+',
      'info.cukes:cucumber-java8:+'
  }
}

/* [ UNIT TESTING ] ================================================================================================= */

tasks.compileTestJava.onlyIf { useTdd }
test.onlyIf { useTdd }

if (useJacoco) {
  apply plugin: 'jacoco'

  jacoco {
    toolVersion = '+'
  }
}

test {
  /* Print tests results to the output */
  testLogging {
    // set options for log level LIFECYCLE
    events "failed", "passed"

    // set options for log level DEBUG
    debug.events "failed", "passed", "skipped", "standardError", "standardOut", "started"

    // set options for log level INFO
    info.events = ["failed", "passed", "skipped"]
  }

  /* Disable separated test reports, we use aggregated */
  reports {
    html.enabled = false
  }
}

//configurations {
//  cucumberRuntime {
//    extendsFrom testRuntime
//  }
//}
//
//task cucumber(dependsOn: ['assemble', 'compileTestJava']) {
//  onlyIf useTdd
//
//  doLast {
//    javaexec {
//      main = "cucumber.api.cli.Main"
//
//      classpath = configurations.cucumberRuntime +
//          sourceSets.main.output +
//          sourceSets.test.output
//
//      args = ['--plugin', 'pretty', '--glue', 'gradle.cucumber', 'src/test/resources']
//    }
//  }
//}
//
//build.dependsOn cucumber

/* [ WEB SERVER ] =================================================================================================== */

gretty {
  contextPath = '/time'
}
