buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.akhikhl.gretty:gretty:+'
  }
}

apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

// we will use lambda
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'


if (useJacoco) {
  apply plugin: 'jacoco'

  jacoco {
    toolVersion = '+'
  }
}

war {
  jar.enabled = false
}

dependencies {
  compile project(":lib-core")

  /* Java RX - v2.xx */
  compile 'org.glassfish.jersey.containers:jersey-container-servlet:+'
  compile 'org.glassfish.jersey.media:jersey-media-json-jackson:+'

  /* Jackson JSON added */
  compile 'com.fasterxml.jackson.core:jackson-databind:+'

  // compile 'joda-time:joda-time:+'

  // providedCompile 'joda-time:joda-time:+'

  if (useTdd) {
    /* Unit Testing Frameworks */
    testCompile 'junit:junit:+'
    testCompile 'org.mockito:mockito-core:+'
    testCompile 'org.assertj:assertj-core:+'

    /* Reflection utilities */
    testCompile('org.reflections:reflections:+') {
      exclude group: 'com.google.code.findbugs', module: 'annotations'
    }

    /* Pretty time printing for test reports */
    testCompile 'org.ocpsoft.prettytime:prettytime:+'

    /* SLF4J + Logback + log4j-over-slf4j + jul-to-slf4j */
    testCompile 'org.slf4j:jul-to-slf4j:+'

    /* Run tests on Grizzly2 provider instead of real server */
    testCompile 'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:+'
  }
}

tasks.compileTestJava.onlyIf { useTdd }
test.onlyIf { useTdd }

test {
  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
  }
}


gretty {
  contextPath = '/api'
}