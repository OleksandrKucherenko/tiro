apply plugin: 'java'

// we will use lambda
sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

repositories {
  maven { url "http://m2.objectdb.com" }
}

dependencies {
  compile 'org.slf4j:slf4j-api:+'
  compile 'javax:javaee-api:+'

  testCompile 'junit:junit:+'
  testCompile 'com.objectdb:objectdb:+'
}

/* [ UNIT TESTING ] ================================================================================================= */

test {
  /* Print tests results to the output */
  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
  }
}

/* [ VALIDATIONS ] ================================================================================================== */

def fileToUrl(def filePath) {
  return new File(filePath).toURI().toURL();
}

def validateXml(def xmlUrl, def xsdUrl) {
//  xsdUrl = 'http://abbot.sourceforge.net/doc/abbot.xsd'
//  xmlUrl = 'http://abbot.sourceforge.net/src/example/SimpleApplet.xml'

  new URL("${xsdUrl}").withInputStream { xsd ->
    new URL("${xmlUrl}").withInputStream { xml ->
      javax.xml.validation.SchemaFactory.newInstance(javax.xml.XMLConstants.W3C_XML_SCHEMA_NS_URI)
          .newSchema(new javax.xml.transform.stream.StreamSource(xsd))
          .newValidator()
          .validate(new javax.xml.transform.stream.StreamSource(xml))
    }
  }
}

/** Validate persistence.xml file against standard (XSD schema). */
task checkPersistenceXml {
  group 'verification'
  description 'Check persistence.xml file against the validation schema.'

  def xmlUrl = fileToUrl("${project.projectDir}/src/main/resources/META-INF/persistence.xml")
  def xsdUrl = fileToUrl("${rootProject.projectDir}/gradle/schemas/persistence_2_0.xsd")

  validateXml(xmlUrl, xsdUrl)
}

/* Check task should include XML validation as a dependency. */
check.dependsOn checkPersistenceXml